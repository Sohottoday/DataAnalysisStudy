# urllib.parse.urljoin() 함수는 상대경로를 절대경로로 변환하는 함수

from urllib.parse import urljoin

baseUrl = "http://www.example.com/html/a.html"

print(urljoin(baseUrl, "b.html"))
print(urljoin(baseUrl, "sub/c.html"))
print(urljoin(baseUrl, "../index.html"))
print(urljoin(baseUrl, "../image/a.png"))
print(urljoin(baseUrl, "../css/style.css"))

# urljoin 두 번째 매개 변수에 상대경로가 아닌 절대공로를 지정하는 경우("http://~")

urljoin(baseUrl, "http://www.ohter.com/aa")


"""
http 통신의 특성
= Connectionless : 클라이언트가 request를 서버에 보내면, 서버는 클라이언트에게 response를 보낸다. 그리고 접속을 끊는 특성
= Stateless : 접속을 끊는 순간 클라이언트와 서버의 통신은 끝나고 상태정보는 유 지하지 않는 특성

# 쿠키(Cookie)
 - 쿠키는 클라이언트에 저장되는 키와 값이 들어 있는 작은 데이터 파일
 - 쿠키는 이름, 값, 만료날짜(쿠키저장기간), 경로정보가 들어있다.
 - 쿠키는 일정 시간동안 데이터를 저장할 수 있어서 로그인 상태를 유지한다.
 - 쿠키는 클라이언트의 상태 정보를 유저의 하드 디스크에 저장하였다가 필요할 때 참조, 재사용한다.

 쿠키 사용 예
 => 방문 사이트에서 '이 아아디와 비밀번호를 저장하시겠습니까?' 라는 메세지는 쿠키로 저장하겠냐는 의미

# 세션(Session)
- 세션은 클라이언트와 웹서버간 네트워크 연결이 지속 유지되고 있는 상태를 말한다.
- 즉, 사용자가 브라우저를 열어 서버에 접속한 뒤 접속을 종료할 때까지를 말한다.
- http프로토콜은 비접속형 프로토콜이기에, 매 접속시마다 새로운 네트워크 연결이 이러우지는데, 세션이 연결 유지를 가능하게 해준다.
- 클라이언트가 Request를 보내면, 해당 서버의 엔진이 클라이언트에게 유일한 id를 부여하는데, 이 id를 세션이라 한다.
- 세션 ID는 임시로 저장하여 페이지 이동 시 이용하거나, 클라이언트가 재접속했을 때 클라이언트를 유일하게 구분하는 수단이 된다.

## 세션 원리
1. 세션 id를 서버에서 클라이언트가 웹사이트에 접속시 발급해준다.
2. 서버에서 클라이언트로 발급해준 세션id를 쿠키(쿠키 이름은 JSESSIONID)를 사용해서 저장.
3. 클라이언트 다시 접속시, 이 쿠키(JSESSIONID)를 이용해서 세션 ID값을 서버에 전달한다.

## 세션의 장접
- 각 클라이언트에게 고유 ID를 부여한다.
- 세션 ID로 클라이언트를 구분해서 클라이언트의 요구에 맞는 서비스를 제공할 수 있다.
- 사용했던 정보들을 서버에 저장하기 때문에 보안 상 쿠키보다 우수하다.

## 세션의 단점
- 서버에 저장되는 세션 때문에 서버에 처리를 요구하는 부하와 저장공간을 필요로 한다.

## 쿠키와 세션의 차이점
- 큰 차이점은 저장되는 위치
- 쿠키는 클라이언트에 저장되어 보내는 역할을 하고, 세션은 서버에 저장되어 클라이언트에게 알려줘서 사용한다.

"""